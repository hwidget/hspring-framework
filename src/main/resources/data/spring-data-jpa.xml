<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd

	       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">


    <import resource="data-source.xml"/>


    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="connection.autoReconnect">true</prop>
                <prop key="connection.autoReconnectForPools">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
            </props>
        </property>
    </bean>


    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="true"/>
        <property name="generateDdl" value="true"/>
        <property name="database" value="MYSQL"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>

        <!-- spring based scanning for entity classes>-->
        <property name="packagesToScan">
            <array>
                <value>com.ryan.spring.web.entity</value>
            </array>
        </property>

        <property name="jpaPropertyMap">
            <util:map>
                <entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
                <entry key="hibernate.hbm2ddl.auto" value="none"/>
                <entry key="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.ImprovedNamingStrategy"/>
                <entry key="hibernate.connection.charSet" value="UTF-8"/>
                <entry key="hibernate.show_sql" value="true"/>
                <entry key="hibernate.format_sql" value="true"/>
                <entry key="hibernate.use_sql_comments" value="true"/>
                <entry key="hibernate.jdbc.batch_size" value="50"/>
                <entry key="hibernate.jdbc.fetch_size" value="50"/>
                <entry key="hibernate.max_fetch_depth" value="50"/>
                <entry key="hibernate.default_batch_fetch_size" value="50"/>
                <entry key="generateDdl" value="false"/>
            </util:map>
        </property>
    </bean>

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!-- 配置 JPA Transaction -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"></bean>
        </property>
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!--开启注解事务配置-->
    <!-- Enables the Hibernate @Transactional programming model -->
    <!--<tx:annotation-driven transaction-manager="jpaTransactionManager" />-->

    <jpa:repositories base-package="com.ryan.spring.web" transaction-manager-ref="transactionManager"/>


    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!--根据注解注入-->
    <context:annotation-config/>
    <context:component-scan base-package="com.ryan.spring.web">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RequestMapping"/>
    </context:component-scan>

</beans>